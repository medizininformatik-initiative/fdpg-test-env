---
# tasks file for fdpg-keycloak
- name: Checkout FDPG Deployment
  include_role:
    name: common
    tasks_from: checkout-deploy-repo
  vars:
    feasibility_deploy_version: "{{ deploy_version }}"

- name: Get Certificate and Key from Storage
  include_role:
    name: common
    tasks_from: get-storage-file
  vars:
    storage_file_path: "{{ item.src }}"
    host_file_path: "{{ item.dest }}"
  loop:
  - src:  "secrets/{{ env }}/domain/fdpg.{{ env }}.ffg.de.crt"
    dest: "{{ secrets_path }}/fdpg.{{ env }}.ffg.de.crt"
  - src:  "secrets/{{ env }}/domain/fdpg.{{ env }}.ffg.de.key"
    dest: "{{ secrets_path }}/fdpg.{{ env }}.ffg.de.key"
  when: not letsencrypt_enabled

- name: Set Certificate and Key Path Variables
  set_fact:
    certificate_path: "{{ secrets_path }}/fdpg.{{ env }}.ffg.de.crt"
    private_key_path: "{{ secrets_path }}/fdpg.{{ env }}.ffg.de.key"
  when: not letsencrypt_enabled

- name: Get Certificate and Key from LetsEncrypt
  include_role:
    name: common
    tasks_from: certbot
  vars:
    certbot_register_email: info@tmf-ev.de
    certbot_register_domain: "{{ fdpg_auth_domain }}"
    certificates_path: "{{ secrets_path }}/letsencrypt"
    certbot_user_id: 101
    certbot_group_id: 101
  when: letsencrypt_enabled

- name: Get Keycloak environment config stats
  stat:
    path: "{{ deploy_path }}/feasibility-portal/keycloak/.env"
  register: keycloak_env

- name: Get Keycloak default environment config stats
  stat:
    path: "{{ deploy_path }}/feasibility-portal/keycloak/.env.default"
  register: keycloak_env_default

- name: Copy Keycloak default environment config
  copy:
    src: "{{ deploy_path }}/feasibility-portal/keycloak/.env.default"
    dest: "{{ deploy_path }}/feasibility-portal/keycloak/.env"
    owner: ubuntu
    group: ubuntu
    mode: u+rw,g-wx,o-rwx
    remote_src: true
  when: keycloak_env.stat.exists == false or keycloak_env.stat.ctime < keycloak_env_default.stat.ctime

- name: Keycloak - Read database password
  set_fact:
    kc_db_password: "{{ lookup('file', storage_path + '/secrets/' + env + '/keycloak/keycloak-db.password') }}"
    kc_admin_password: "{{ lookup('file', storage_path + '/secrets/' + env + '/keycloak/keycloak-admin.password') }}"
    kc_test_user_password: "{{ lookup('file', storage_path + '/secrets/' + env + '/keycloak/keycloak-user-test.password') }}"
  changed_when: false

- name: Setup Keycloak
  lineinfile:
    path: "{{ deploy_path }}/feasibility-portal/keycloak/.env"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
  - regexp: '^FEASIBILITY_KC_DB_PW='
    line:    "FEASIBILITY_KC_DB_PW={{ kc_db_password }}"
  - regexp: '^FEASIBILITY_KC_ADMIN_PW='
    line:    "FEASIBILITY_KC_ADMIN_PW={{ kc_admin_password }}"
  - regexp: '^FEASIBILITY_KC_HTTP_RELATIVE_PATH='
    line:    "FEASIBILITY_KC_HTTP_RELATIVE_PATH=/"
  - regexp: '^FEASIBILITY_KC_HOSTNAME_URL='
    line:    'FEASIBILITY_KC_HOSTNAME_URL=https://{{ fdpg_auth_domain }}'
  - regexp: '^FEASIBILITY_KC_HOSTNAME_ADMIN_URL='
    line:    'FEASIBILITY_KC_HOSTNAME_ADMIN_URL=https://{{ fdpg_auth_domain }}'

- name: Set base url in init config
  replace:
    path: "{{ deploy_path }}/feasibility-portal/keycloak/init/feasibility-realm.json"
    regexp: 'https://localhost'
    replace: "https://{{ fdpg_portal_domain }}"

- name: Start Keycloak Service
  community.docker.docker_compose_v2:
    project_name: keycloak
    project_src: "{{ deploy_path }}/feasibility-portal/keycloak"
    files:
    - docker-compose.yml
  register: keycloak_docker

- name: Get keycloak network name
  set_fact:
    keycloak_network: "{{ keycloak_docker.containers[lookup('ansible.utils.index_of', keycloak_docker.containers, 'eq', 'auth', 'Service')].Networks | first }}"

- name: Copy Proxy configuration
  template:
    src: nginx.conf.j2
    dest: "{{ deploy_path }}/nginx.conf"
    owner: ubuntu
    group: ubuntu
    mode: u=rw,g=r,o=r

- name: Copy Proxy docker-compose.yml
  template:
    src: proxy-docker-compose.yml
    dest: "{{ deploy_path }}/proxy-docker-compose.yml"
    owner: ubuntu
    group: ubuntu
    mode: u=rw,g=r,o=r

- name: Start Proxy
  community.docker.docker_compose_v2:
    project_name: keycloak
    project_src: "{{ deploy_path }}"
    files:
    - proxy-docker-compose.yml

- name: Wait for Keycloak
  uri:
    url: "https://{{ fdpg_auth_domain }}"
    follow_redirects: none
    method: GET
    validate_certs: false
  register: _result
  until: _result.status == 200
  retries: 12 # 12 * 5s = 60s
  delay: 5 # Every 5 seconds

- name: Create Test User
  include_tasks: create-user.yml
  vars:
    admin_password: "{{ kc_admin_password }}"
    username: "test"
    first_name: "User"
    last_name: "Test"
    email: "foo@bar.baz"
    password_file: "{{ kc_test_user_password }}"
    roles:
    - name: "FeasibilityUser"
      id: "51cb7b69-d269-4872-b832-2d326e2e8658"

- name: Create Additional Users
  include_tasks: create-user.yml
  vars:
    admin_password: "{{ kc_admin_password }}"
    username: "{{ kc_user.username }}"
    first_name: "{{ kc_user.first_name }}"
    last_name: "{{ kc_user.last_name }}"
    email: "{{ kc_user.username }}@bar.baz"
    password: "{{ lookup('file', kc_user.password_file) }}"
    roles:
    - name: "FeasibilityUser"
      id: "51cb7b69-d269-4872-b832-2d326e2e8658"
  loop: "{{ additional_keycloak_user }}"
  loop_control:
    loop_var: kc_user
  when: additional_keycloak_user is iterable


